#    By: rchbouki <rchbouki@student.42.fr>          +#+  +:+       +#+         #
#    Updated: 2023/10/08 11:36:01 by rchbouki         ###   ########.fr        #
SOURCES		=	./src
INCLUDES	=	./includes
SRCS		=	bashvar/ft_bash.c \
				builtins/ft_builtins.c \
				builtins/ft_cd.c \
				builtins/ft_echo.c \
				builtins/ft_env.c \
				builtins/ft_exit.c \
				builtins/ft_export.c \
				builtins/ft_pwd.c \
				builtins/ft_unset.c \
				executor/pipex.c \
				executor/pipex_utils.c \
				executor/redirec_utils.c \
				get_next_line/get_next_line.c \
				get_next_line/get_next_line_utils.c \
				lexer/ft_dollar.c \
				lexer/ft_lexer_errors.c \
				lexer/ft_lexer.c \
				parser/ft_parser.c \
				libft/ft_atoi.c \
				libft/ft_itoa.c \
				libft/ft_isalpha.c \
				libft/ft_putstr_fd.c \
				libft/ft_putchar_fd.c \
				libft/ft_split.c \
				libft/ft_strchr.c \
				libft/ft_strcmp.c \
				libft/ft_strdup.c \
				libft/ft_strjoin.c \
				libft/ft_strlen.c \
				libft/ft_strncmp.c \
				libft/ft_substr.c \
				signals/ft_signals.c \
				utils/ft_cmds_utils.c \
				utils/ft_stack_utils.c \
OBJS		=	$(addprefix ${OBJECTS}/, $(SRCS:.c=.o))
CC			=	gcc
	$(eval PERCENTAGE=$(shell echo "$(2)*100/$(1)" | bc))
	$(eval FILLED_BLOCKS=$(shell if [ "$(shell echo "$(PERCENTAGE)/10" | bc)" -lt "1" ]; then echo "1"; else echo "$(shell echo "$(PERCENTAGE)/10" | bc)"; fi))
	$(eval EMPTY_BLOCKS=$(shell echo "10 - $(FILLED_BLOCKS)" | bc))
	for i in `seq 1 $(shell echo "$(FILLED_BLOCKS)" | awk '{print int($$1)}')`; do \
${OBJECTS}/%.o: ${SOURCES}/%.c
	@$(call print_progress, $(TOTAL_OBJS), $(COMPILED_OBJS))
	@$(CC) $(CFLAGS) -o $@ -c $< $(CINCLUDES)
	@$(eval COMPILED_OBJS=$(shell echo "$(COMPILED_OBJS)+1" | bc))
	@echo $(GREEN)"\n● Compilation of ${NAME}..."$(EOC)
	@norminette | grep "Error!" > /dev/null && echo $(WHITE)"● [Norminette]: "$(RED)"KO\n"$(EOC) || echo $(WHITE)"● [Norminette]: "$(GREEN)"OK\n"$(EOC)
clean:
	@echo ${RED}"● Deletion of binary files (.o)..."$(EOC)
fclean: clean
	@echo ${RED}"● Deletion of executables and libraries..."$(EOC)
re: fclean all
.PHONY: all clean fclean re r v run vrun
