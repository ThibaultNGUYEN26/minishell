WHAT OUR MINISHELL DOES SO FAR

NOS TOKENS  : |,    <,      >,      >>,     <<,         else      
            : PIPE, INPUT,  OUTPUT, APPEND, HERE_DOC,   NONE
            : 0,    1,      2,      3,      4,          5
            sont définis dans l'enum t_token
        
-> Mettre l'input écrit par l'user dans la structure data avec ft_lexer qui va split par tokens
-> Si un noeud est un token       : data->content = NULL et token aura une valeur allant de 0 à 4
-> Si un noeud n'est pas un token : c'est un MOT, on stocke sa valeur dans data->content et la  valeur de data->token = 5 because it's none of the tokens (ce n'est pas un token)
-> On traite les quotes dans ft_quotes, on prend le contenu de chaque closed quotes SANS les quotes et on remplace data->content par cette nouvelle chaine de caractère
EXEMPLE : 
            Avant ft_quotes : data->content = "truc"
            Après ft_quotes : data->content =  truc

! Si il y'a une erreur de quote, le noeud aura un exit_code = 2
! Si il y'a une erreur de file après redirection, le noeud aura un exit_code = 3